{
 "api": [
  {
   "body": "require \"pixcHelper\"\r\nrequire \"pixcProtocolKeyboard\"\r\nif self.lock then return end\r\nif self.keyboard ~= nil then\r\n\tself.lock = true\r\n\tself.uninit()\r\n\tUtils.Timer.sleep(500)\r\nend\r\nself.lock = nil\r\nself.keyboard = createpixcProtocolKeyboard()\r\nself.keyboard:create(self.IsOpen)\r\nself.keyboard:start(self.Keypress)",
   "kind": "func",
   "name": "init"
  },
  {
   "body": "if self.keyboard ~= nil then\r\n\tself.keyboard:close()\r\n\tself.keyboard = nil\r\nend",
   "kind": "func",
   "name": "uninit"
  },
  {
   "attKind": "internal",
   "body": "self._InOpen = pixcCommon.execAttribute(0, self._InOpen, val, doSet)\r\nreturn self._InOpen\r\n",
   "kind": "func",
   "name": "IsOpen",
   "params": [
    {
     "name": "val",
     "type": ""
    },
    {
     "name": "doSet",
     "type": "bool"
    }
   ],
   "slotStyle": "leftNone;rightOut;triggerHidden"
  },
  {
   "body": "--\n--dispatchBegin:#[65.00 == keyCode]# Keys.a p\nif(65.00 == keyCode) then\n\tself.Keys.a()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[66.00 == keyCode]# Keys.b p\nif(66.00 == keyCode) then\n\tself.Keys.b()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[67.00 == keyCode]# Keys.c p\nif(67.00 == keyCode) then\n\tself.Keys.c()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[68.00 == keyCode]# Keys.d p\nif(68.00 == keyCode) then\n\tself.Keys.d()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[69.00 == keyCode]# Keys.e p\nif(69.00 == keyCode) then\n\tself.Keys.e()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[70.00 == keyCode]# Keys.f p\nif(70.00 == keyCode) then\n\tself.Keys.f()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[71.00 == keyCode]# Keys.g p\nif(71.00 == keyCode) then\n\tself.Keys.g()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[72.00 == keyCode]# Keys.h p\nif(72.00 == keyCode) then\n\tself.Keys.h()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[73.00 == keyCode]# Keys.i p\nif(73.00 == keyCode) then\n\tself.Keys.i()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[74.00 == keyCode]# Keys.j p\nif(74.00 == keyCode) then\n\tself.Keys.j()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[75.00 == keyCode]# Keys.k p\nif(75.00 == keyCode) then\n\tself.Keys.k()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[76.00 == keyCode]# Keys.l p\nif(76.00 == keyCode) then\n\tself.Keys.l()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[77.00 == keyCode]# Keys.m p\nif(77.00 == keyCode) then\n\tself.Keys.m()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[78.00 == keyCode]# Keys.n p\nif(78.00 == keyCode) then\n\tself.Keys.n()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[79.00 == keyCode]# Keys.o p\nif(79.00 == keyCode) then\n\tself.Keys.o()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[80.00 == keyCode]# Keys.p p\nif(80.00 == keyCode) then\n\tself.Keys.p()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[81.00 == keyCode]# Keys.q p\nif(81.00 == keyCode) then\n\tself.Keys.q()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[82.00 == keyCode]# Keys.r p\nif(82.00 == keyCode) then\n\tself.Keys.r()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[83.00 == keyCode]# Keys.s p\nif(83.00 == keyCode) then\n\tself.Keys.s()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[84.00 == keyCode]# Keys.t p\nif(84.00 == keyCode) then\n\tself.Keys.t()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[85.00 == keyCode]# Keys.u p\nif(85.00 == keyCode) then\n\tself.Keys.u()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[86.00 == keyCode]# Keys.v p\nif(86.00 == keyCode) then\n\tself.Keys.v()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[87.00 == keyCode]# Keys.w p\nif(87.00 == keyCode) then\n\tself.Keys.w()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[88.00 == keyCode]# Keys.x p\nif(88.00 == keyCode) then\n\tself.Keys.x()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[89.00 == keyCode]# Keys.y p\nif(89.00 == keyCode) then\n\tself.Keys.y()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[90.00 == keyCode]# Keys.z p\nif(90.00 == keyCode) then\n\tself.Keys.z()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[112.00 == keyCode]# FunctionKeys.F1 p\nif(112.00 == keyCode) then\n\tself.FunctionKeys.F1()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[113.00 == keyCode]# FunctionKeys.F2 p\nif(113.00 == keyCode) then\n\tself.FunctionKeys.F2()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[114.00 == keyCode]# FunctionKeys.F3 p\nif(114.00 == keyCode) then\n\tself.FunctionKeys.F3()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[115.00 == keyCode]# FunctionKeys.F4 p\nif(115.00 == keyCode) then\n\tself.FunctionKeys.F4()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[116.00 == keyCode]# FunctionKeys.F5 p\nif(116.00 == keyCode) then\n\tself.FunctionKeys.F5()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[117.00 == keyCode]# FunctionKeys.F6 p\nif(117.00 == keyCode) then\n\tself.FunctionKeys.F6()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[118.00 == keyCode]# FunctionKeys.F7 p\nif(118.00 == keyCode) then\n\tself.FunctionKeys.F7()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[119.00 == keyCode]# FunctionKeys.F8 p\nif(119.00 == keyCode) then\n\tself.FunctionKeys.F8()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[120.00 == keyCode]# FunctionKeys.F9 p\nif(120.00 == keyCode) then\n\tself.FunctionKeys.F9()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[121.00 == keyCode]# FunctionKeys.F10 p\nif(121.00 == keyCode) then\n\tself.FunctionKeys.F10()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[122.00 == keyCode]# FunctionKeys.F11 p\nif(122.00 == keyCode) then\n\tself.FunctionKeys.F11()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[123.00 == keyCode]# FunctionKeys.F12 p\nif(123.00 == keyCode) then\n\tself.FunctionKeys.F12()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[36.00 == keyCode]# FunctionKeys.Home p\nif(36.00 == keyCode) then\n\tself.FunctionKeys.Home()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[35.00 == keyCode]# FunctionKeys.End p\nif(35.00 == keyCode) then\n\tself.FunctionKeys.End()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[34.00 == keyCode]# FunctionKeys.PageDown p\nif(34.00 == keyCode) then\n\tself.FunctionKeys.PageDown()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[33.00 == keyCode]# FunctionKeys.PageUp p\nif(33.00 == keyCode) then\n\tself.FunctionKeys.PageUp()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[13.00 == keyCode]# FunctionKeys.Enter p\nif(13.00 == keyCode) then\n\tself.FunctionKeys.Enter()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[32.00 == keyCode]# FunctionKeys.Space p\nif(32.00 == keyCode) then\n\tself.FunctionKeys.Space()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[9.00 == keyCode]# FunctionKeys.Tab p\nif(9.00 == keyCode) then\n\tself.FunctionKeys.Tab()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[46.00 == keyCode]# FunctionKeys.Delete p\nif(46.00 == keyCode) then\n\tself.FunctionKeys.Delete()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[45.00 == keyCode]# FunctionKeys.Insert p\nif(45.00 == keyCode) then\n\tself.FunctionKeys.Insert()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[40.00 == keyCode]# ArrowKeys.Down p\nif(40.00 == keyCode) then\n\tself.ArrowKeys.Down()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[37.00 == keyCode]# ArrowKeys.Left p\nif(37.00 == keyCode) then\n\tself.ArrowKeys.Left()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[39.00 == keyCode]# ArrowKeys.Right p\nif(39.00 == keyCode) then\n\tself.ArrowKeys.Right()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[38.00 == keyCode]# ArrowKeys.Up p\nif(38.00 == keyCode) then\n\tself.ArrowKeys.Up()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[27.00 == keyCode]# FunctionKeys.Escape p\nif(27.00 == keyCode) then\n\tself.FunctionKeys.Escape()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[44.00 == keyCode]# FunctionKeys.PrintScreen p\nif(44.00 == keyCode) then\n\tself.FunctionKeys.PrintScreen()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[145.00 == keyCode]# FunctionKeys.ScrollLock p\nif(145.00 == keyCode) then\n\tself.FunctionKeys.ScrollLock()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[19.00 == keyCode]# FunctionKeys.Pause p\nif(19.00 == keyCode) then\n\tself.FunctionKeys.Pause()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[49.00 == keyCode]# Keys.Digit_1 p\nif(49.00 == keyCode) then\n\tself.Keys.Digit_1()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[50.00 == keyCode]# Keys.Digit_2 p\nif(50.00 == keyCode) then\n\tself.Keys.Digit_2()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[51.00 == keyCode]# Keys.Digit_3 p\nif(51.00 == keyCode) then\n\tself.Keys.Digit_3()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[52.00 == keyCode]# Keys.Digit_4 p\nif(52.00 == keyCode) then\n\tself.Keys.Digit_4()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[53.00 == keyCode]# Keys.Digit_5 p\nif(53.00 == keyCode) then\n\tself.Keys.Digit_5()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[54.00 == keyCode]# Keys.Digit_6 p\nif(54.00 == keyCode) then\n\tself.Keys.Digit_6()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[55.00 == keyCode]# Keys.Digit_7 p\nif(55.00 == keyCode) then\n\tself.Keys.Digit_7()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[56.00 == keyCode]# Keys.Digit_8 p\nif(56.00 == keyCode) then\n\tself.Keys.Digit_8()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[57.00 == keyCode]# Keys.Digit_9 p\nif(57.00 == keyCode) then\n\tself.Keys.Digit_9()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[48.00 == keyCode]# Keys.Digit_0 p\nif(48.00 == keyCode) then\n\tself.Keys.Digit_0()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[189.00 == keyCode]# Keys.Minus p\nif(189.00 == keyCode) then\n\tself.Keys.Minus()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[8.00 == keyCode]# Keys.Backslash p\nif(8.00 == keyCode) then\n\tself.Keys.Backslash()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[187.00 == keyCode]# Keys.Plus p\nif(187.00 == keyCode) then\n\tself.Keys.Plus()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[191.00 == keyCode]# Keys.Hach p\nif(191.00 == keyCode) then\n\tself.Keys.Hach()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[188.00 == keyCode]# Keys.Comma p\nif(188.00 == keyCode) then\n\tself.Keys.Comma()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[190.00 == keyCode]# Keys.Point p\nif(190.00 == keyCode) then\n\tself.Keys.Point()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[97.00 == keyCode]# Numpad.Num_1 p\nif(97.00 == keyCode) then\n\tself.Numpad.Num_1()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[98.00 == keyCode]# Numpad.Num_2 p\nif(98.00 == keyCode) then\n\tself.Numpad.Num_2()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[99.00 == keyCode]# Numpad.Num_3 p\nif(99.00 == keyCode) then\n\tself.Numpad.Num_3()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[100.00 == keyCode]# Numpad.Num_4 p\nif(100.00 == keyCode) then\n\tself.Numpad.Num_4()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[101.00 == keyCode]# Numpad.Num_5 p\nif(101.00 == keyCode) then\n\tself.Numpad.Num_5()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[102.00 == keyCode]# Numpad.Num_6 p\nif(102.00 == keyCode) then\n\tself.Numpad.Num_6()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[103.00 == keyCode]# Numpad.Num_7 p\nif(103.00 == keyCode) then\n\tself.Numpad.Num_7()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[104.00 == keyCode]# Numpad.Num_8 p\nif(104.00 == keyCode) then\n\tself.Numpad.Num_8()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[105.00 == keyCode]# Numpad.Num_9 p\nif(105.00 == keyCode) then\n\tself.Numpad.Num_9()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[96.00 == keyCode]# Numpad.Num_0 p\nif(96.00 == keyCode) then\n\tself.Numpad.Num_0()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[107.00 == keyCode]# Numpad.Num_Plus p\nif(107.00 == keyCode) then\n\tself.Numpad.Num_Plus()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[109.00 == keyCode]# Numpad.Num_Minus p\nif(109.00 == keyCode) then\n\tself.Numpad.Num_Minus()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[106.00 == keyCode]# Numpad.Num_Multiply p\nif(106.00 == keyCode) then\n\tself.Numpad.Num_Multiply()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[111.00 == keyCode]# Numpad.Num_Divid p\nif(111.00 == keyCode) then\n\tself.Numpad.Num_Divid()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[13.00 == keyCode]# Numpad.Num_Enter p\nif(13.00 == keyCode) then\n\tself.Numpad.Num_Enter()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[110.00 == keyCode]# Numpad.Num_Comma p\nif(110.00 == keyCode) then\n\tself.Numpad.Num_Comma()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[162.00 == keyCode]# SpecialKeys.Control p\nif(162.00 == keyCode) then\n\tself.SpecialKeys.Control()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[161.00 == keyCode]# SpecialKeys.Control p\nif(161.00 == keyCode) then\n\tself.SpecialKeys.Control()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd\n--dispatchBegin:#[91.00 == keyCode]# SpecialKeys.Windows p\nif(91.00 == keyCode) then\n\tself.SpecialKeys.Windows()\n\tpixc.suppressCallRefs()\nend\n--dispatchEnd",
   "kind": "func",
   "name": "Keypress",
   "params": [
    {
     "name": "keyCode",
     "type": ""
    }
   ],
   "slotStyle": "leftNone;rightOut;triggerHidden"
  },
  {
   "elems": [
    {
     "body": "",
     "kind": "func",
     "name": "a",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "b",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "c",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "d",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "e",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "f",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "g",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "h",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "i",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "j",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "k",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "l",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "m",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "n",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "o",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "p",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "q",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "r",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "s",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "t",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "u",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "v",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "w",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "x",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "y",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "z",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "Digit_1",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "Digit_2",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "Digit_3",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "Digit_4",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "Digit_5",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "Digit_6",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "Digit_7",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "Digit_8",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "Digit_9",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "Digit_0",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "Minus",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "Plus",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "Backslash",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "Hach",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "Point",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "Comma",
     "slotStyle": "leftNone;rightOut"
    }
   ],
   "kind": "ns",
   "name": "Keys"
  },
  {
   "elems": [
    {
     "body": "",
     "kind": "func",
     "name": "Num_1",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "Num_2",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "Num_3",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "Num_4",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "Num_5",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "Num_6",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "Num_7",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "Num_8",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "Num_9",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "Num_0",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "Num_Comma",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "Num_Minus",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "Num_Plus",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "Num_Multiply",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "Num_Divid",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "Num_Enter",
     "slotStyle": "leftNone;rightOut"
    }
   ],
   "kind": "ns",
   "name": "Numpad"
  },
  {
   "elems": [
    {
     "body": "",
     "kind": "func",
     "name": "F1",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "F2",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "F3",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "F4",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "F5",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "F6",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "F7",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "F8",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "F9",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "F10",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "F11",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "F12",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "Tab",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "PageUp",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "PageDown",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "Home",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "Delete",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "Insert",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "End",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "Enter",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "ScrollLock",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "PrintScreen",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "Pause",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "Escape",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "Space",
     "slotStyle": "leftNone;rightOut"
    }
   ],
   "kind": "ns",
   "name": "FunctionKeys"
  },
  {
   "elems": [
    {
     "body": "",
     "kind": "func",
     "name": "Down",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "Up",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "Right",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "Left",
     "slotStyle": "leftNone;rightOut"
    }
   ],
   "kind": "ns",
   "name": "ArrowKeys"
  },
  {
   "elems": [
    {
     "body": "",
     "kind": "func",
     "name": "Control",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "Shift",
     "slotStyle": "leftNone;rightOut"
    },
    {
     "body": "",
     "kind": "func",
     "name": "Windows",
     "slotStyle": "leftNone;rightOut"
    }
   ],
   "kind": "ns",
   "name": "SpecialKeys"
  }
 ],
 "cjv": {
  "h": 388.0,
  "w": 216.0,
  "x": 796.0,
  "y": 58.0
 },
 "definedExternally": false,
 "hostInfo": {
  "systemType": ""
 },
 "libraryExportPath": "C:/PixeraCode/nui/data/control_library_standard/Drivers/Generic/Keyboard.json",
 "license": "1GNTlyr7sewU1l3S6nhV4lVXKIt9r2lUp8XOL7N0WnNfsUuL5ji9Erbm/1wNOjVWHQtlt3ZLG8i4D7hDczzhCqAjRolsdHf8aeHpyM/QAu3aMTjcdE8yFq9wGZigqQYg8FjXGF0AKdY2QiPLQa3dRQ==",
 "name": "Keyboard",
 "properties": [
  {
   "cont": "true",
   "name": "Auto Init",
   "typeHint": "bool"
  },
  {
   "cont": "AV Stumpfl GmbH (Benni M.)",
   "name": "Author",
   "readOnly": true,
   "typeHint": "string"
  },
  {
   "cont": "",
   "imageBase64": "",
   "name": "Logo",
   "readOnly": true,
   "showName": false,
   "typeHint": "image"
  },
  {
   "cont": "1.1",
   "name": "Version",
   "readOnly": true,
   "typeHint": "string"
  }
 ],
 "separateCode": false,
 "uiUrl": ""
}