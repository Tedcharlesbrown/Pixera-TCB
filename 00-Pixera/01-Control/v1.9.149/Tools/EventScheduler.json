{
 "api": [
  {
   "body": "local json = require 'json'\r\nrequire 'pixcHelper'\r\nself.helper = createPixcHelper(pixc,self())\r\n\r\nif self.interval ~= nil then\r\n\tpixc.getRoot().Utils.Timer.clearInterval(self.interval);\r\n\tself.interval = nil\r\nend\r\nself.interval = pixc.getRoot().Utils.Timer.setInterval(\r\n\tfunction()\r\n\t\tself.Time()\r\n\t  end, 700) --time set to 700 to prevent missing the second\r\n\r\nself.eTable = {}\r\nlocal js = json.decode(self().Events.pixcGetDescription())\r\nlocal folder = js.elems\r\nif folder == nil then\r\nreturn\r\nend\r\nfor i,n in pairs(folder) do --read and save every event in a table to be accessable und not bound to function name\r\n    local fn = self().Events[n.name].pixcGetBody()\r\n    local s1 = self.helper.stringSplit(fn,\";\")[2]\r\n    local s2 = self.helper.stringSplit(s1,\".\")[2]\r\n\tlocal s3 = self.helper.stringSplit(s2,\" \")[1]\r\n    table.insert(self.eTable, {n.name , s3})\r\nend\r\nreturn",
   "kind": "func",
   "name": "init",
   "slotStyle": "leftIn;rightOut"
  },
  {
   "body": "if self.interval ~= nil then\r\n\tpixc.getRoot().Utils.Timer.clearInterval(self.interval);\r\n\tself.interval = nil\r\nend\r\nreturn",
   "kind": "func",
   "name": "uninit",
   "slotStyle": "leftIn;rightOut"
  },
  {
   "attReports": {
    "0": "4"
   },
   "body": "\r\n--json template for new events\r\nlocal myTemplate = [[\r\n\t{\r\n\t\t\"name\": \"Event_##IDX##\",\r\n\t\t\"kind\": \"fn\",\r\n\t\t\"attKind\": \"standard\",\r\n\t\t\"slotStyle\": \"leftIn;rightOut\",\r\n\t\t\"params\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"val\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"doSet\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"result\": {\r\n\t\t},\r\n\t\t\"body\": \"if val ~= nil then;self.eventVal##IDX## = val \\n pixc.suppressCallRefs() \\n pixc.report(self.eventVal##IDX##) \\n return self.eventVal##IDX## \\n end \\n pixc.report(self.eventVal##IDX##) \\n pixc.callRefs(self.eventVal##IDX##) \\n return self.eventVal##IDX##\"\r\n\t}\r\n]]\r\n\r\n--modify strings in template\r\nlocal res = '['\r\nlocal removeLast = false\r\nlocal vEnd = self.helper:getProperty(\"Number of Events\")\r\n\r\nfor i= 1, vEnd,1 do\r\n\tlocal tmod = myTemplate\r\n\tlocal s = tostring(i)\r\n\tremoveLast = true\r\n\tlocal c;\r\n\r\n\ttmod, c = string.gsub(tmod,\"##IDX##\", s)\r\n\tres = res..tmod;\r\n\tres = res..','\r\nend\r\n\r\nif removeLast == true then\r\n\tres = res:sub(1, -2)\r\nend\r\nres = res..']'\r\n--adding funktions to this module:\r\nself().dynamicRebuildFromDescriptions(res, \"Events\", \"(.*)\")\r\n",
   "kind": "func",
   "name": "createEvents",
   "slotStyle": "leftNone;rightNone"
  },
  {
   "attKind": "internal",
   "body": "\r\nlocal res = os.date (self.timetable[self.helper:getProperty(\"Time Format\")]) \r\n--make sure to trigger every second\r\nif self.lastRes == nil then --first tick is setting the lastRes value\r\n\tself.lastRes = res \r\n\treturn\r\nend\r\n\r\npixc.report(res) --Display time in Value field\r\nif res ~= self.lastRes then --catch double triggers\r\n\tself.lastRes = res\r\n\tpixc.callRefs(res)\r\n\tfor k,v in pairs(self.eTable) do --iterate through table which was made while init and trigger Event if match is found \r\n\t\tif self[v[2]] ~= nil and self[v[2]] == res then\r\n\t\t\tself.Events[v[1]]()\r\n\t\t\tpixc.log(\"Trigger \" .. tostring(v[1]))\r\n\t\tend\r\n\tend\r\nend\r\n",
   "kind": "func",
   "name": "Time",
   "params": [
    {
     "name": "val",
     "type": ""
    },
    {
     "name": "doSet",
     "type": "bool"
    }
   ],
   "slotStyle": "leftNone;rightOut;triggerHidden"
  },
  {
   "elems": [
    {
     "attKind": "standard",
     "attReports": {
      "0": ""
     },
     "body": "if val ~= nil then;self.eventVal1 = val \n pixc.suppressCallRefs() \n pixc.report(self.eventVal1) \n return self.eventVal1 \n end \n pixc.report(self.eventVal1) \n pixc.callRefs(self.eventVal1) \n return self.eventVal1",
     "kind": "func",
     "name": "Event_1",
     "params": [
      {
       "name": "val",
       "type": "string"
      },
      {
       "name": "doSet",
       "type": "bool"
      }
     ],
     "slotStyle": "leftIn;rightOut"
    },
    {
     "attKind": "standard",
     "attReports": {
      "0": ""
     },
     "body": "if val ~= nil then;self.eventVal2 = val \n pixc.suppressCallRefs() \n pixc.report(self.eventVal2) \n return self.eventVal2 \n end \n pixc.report(self.eventVal2) \n pixc.callRefs(self.eventVal2) \n return self.eventVal2",
     "kind": "func",
     "name": "Event_2",
     "params": [
      {
       "name": "val",
       "type": "string"
      },
      {
       "name": "doSet",
       "type": "bool"
      }
     ],
     "slotStyle": "leftIn;rightOut"
    },
    {
     "attKind": "standard",
     "attReports": {
      "0": ""
     },
     "body": "if val ~= nil then;self.eventVal3 = val \n pixc.suppressCallRefs() \n pixc.report(self.eventVal3) \n return self.eventVal3 \n end \n pixc.report(self.eventVal3) \n pixc.callRefs(self.eventVal3) \n return self.eventVal3",
     "kind": "func",
     "name": "Event_3",
     "params": [
      {
       "name": "val",
       "type": "string"
      },
      {
       "name": "doSet",
       "type": "bool"
      }
     ],
     "slotStyle": "leftIn;rightOut"
    }
   ],
   "kind": "ns",
   "name": "Events"
  },
  {
   "body": "\r\n--make a map for later use\r\nself.timetable = {\r\n\t[\"H:M:S\"] = \"%X\",\r\n\t[\"Date\"] = \"%d.%m.%Y\",\r\n\t[\"Day\"] = \"%d\",\r\n\t[\"Month\"] = \"%m\",\r\n\t[\"Year\"] = \"%Y\",\r\n\t[\"Hour\"] = \"%H\",\r\n\t[\"Minute\"] = \"%M\",\r\n\t[\"Second\"] = \"%S\",\r\n\t[\"DayName\"] = \"%A\",\r\n\t[\"MonthName\"] = \"%B\",\r\n\t[\"FullDateTime\"] = \"%c\",\r\n\t[\"H:M:S D.M.Y\"] = \"%X %d.%m.%Y\",\r\n\t[\"DayName H:M:S\"] = \"%A %X\"\r\n\t}\r\n--copy the keys from this map to another table for the dropdown\r\nlocal list = {}\r\nfor k,v in pairs(self.timetable) do\r\ntable.insert(list,k)\r\nend\r\nreturn list --return list for dropdown window",
   "kind": "func",
   "name": "dropdown",
   "slotStyle": "hidden"
  }
 ],
 "cjv": {
  "h": 200.0,
  "w": 200.0,
  "x": 459.0,
  "y": 252.0
 },
 "definedExternally": false,
 "hostInfo": {
  "systemType": ""
 },
 "libraryExportPath": "C:/Program Files/AV Stumpfl/Pixera/build_1-9-139/data/control_library_standard/Tools/EventScheduler.json",
 "license": "1GNTlyr7sewU1l3S6nhV4maGTGKDPIFrVWQmCd5mjXKFIE18Zo26Q5ZU1UFWcRxefsPKMDphF/2AFDpXJ4Y7WhMP6+3VYpfzjecryYL43yG9MtkNCERxyPqlz4esIiJj/xvXeQKtmX8SyLRckDe4/3QvWu1RSOr3VOd9T/bWkaA=",
 "name": "EventScheduler",
 "properties": [
  {
   "cont": "true",
   "name": "Auto Init",
   "typeHint": "bool"
  },
  {
   "cont": "3",
   "name": "Number of Events",
   "typeHint": "number"
  },
  {
   "cont": "H:M:S",
   "name": "Time Format",
   "optionsSourceFunc": "self.dropdown",
   "typeHint": "string"
  },
  {
   "cont": "AV Stumpfl GmbH",
   "name": "Author",
   "readOnly": true,
   "typeHint": "string"
  },
  {
   "cont": "",
   "imageBase64": "",
   "name": "Logo",
   "readOnly": true,
   "showName": false,
   "typeHint": "image"
  },
  {
   "cont": "www.pixera.one",
   "name": "Url",
   "readOnly": true,
   "typeHint": "url"
  },
  {
   "cont": "1.5",
   "name": "Version",
   "readOnly": true,
   "typeHint": "string"
  },
  {
   "cont": "28.03.2023",
   "name": "Date",
   "readOnly": true,
   "showName": false,
   "typeHint": "string"
  },
  {
   "cont": "https://help.pixera.one/modules/2104080-eventschedule",
   "name": "Online Description",
   "readOnly": true,
   "typeHint": "url"
  },
  {
   "cont": "With this module you can set a trigger at certain times. Specify Number of Entries in the Propterties to define the number of events, then click once on “createEntries” to generate them in the Events folder.    Type the desired trigger time for the event in the attribute field in string format e.g. 10:45:00, if the string in \"Time\" is exactly the same the event will be triggered.    You can change the time format in the dropdown window in properties.    If you send a string to an event the event will not be triggered, only if \"nil\" (no input) is sent the function will be triggered, so a string can replace the event and a call without data will trigger the event.    It is also possible to rename your events.     ",
   "name": "Short Description",
   "readOnly": true,
   "typeHint": "string"
  }
 ],
 "separateCode": false,
 "uiUrl": ""
}