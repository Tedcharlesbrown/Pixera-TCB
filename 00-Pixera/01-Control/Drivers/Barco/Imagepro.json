{
 "api": [
  {
   "body": "",
   "kind": "func",
   "name": "ref",
   "slotStyle": "leftIn;rightOut;triggerHidden"
  },
  {
   "body": "\nrequire \"pixcHelper\"\nrequire \"pixcNetwork\"\nif self.lock == true then return end\nself.lock = true\nif self.helper ~= nil then\n\treturn \nend\nself.lock = nil\nself.helper = createPixcHelper(pixc,self())\nself.network = createPixcNetwork()\n\nself.ip = self.helper:getProperty(\"IP\",\"127.0.0.1\")\nself.port = tonumber(self.helper:getProperty(\"Port\",\"10001\"))\nself.network:configureTcp(\n\tself.ip,\n\tself.port,\n\tfunction (handle, data) self().receive(data) end,\n\tfunction(handle, error) pixc.log(\"closeCallback: \"..error) end)\nself.network:setStatusCallbacks(\n\tfunction (...) pixc.log(...) end,\n\tfunction(isConnected) self().IsConnected(isConnected, true) end)\nself.network:start()",
   "kind": "func",
   "name": "init",
   "slotStyle": "leftIn;rightOut"
  },
  {
   "body": "if self.network ~= nil then\r\n\tself.network:close()\r\nend\r\nself.network = nil\r\nself.helper = nil\r\nself.IsConnected(false)",
   "kind": "func",
   "name": "uninit",
   "slotStyle": "leftIn;rightOut"
  },
  {
   "attKind": "internal",
   "body": "self.open = pixcCommon.execAttribute(false, self.open, isOpen, doSet)\r\n",
   "kind": "func",
   "name": "IsConnected",
   "params": [
    {
     "name": "isConnected",
     "type": "bool"
    },
    {
     "name": "doSet",
     "type": "bool"
    }
   ],
   "slotStyle": "leftNone;rightOut;triggerHidden"
  },
  {
   "attKind": "internal",
   "body": "self._receive = pixcCommon.execAttribute(\"\", self._receive, val, doSet)\r\nreturn self._receive",
   "kind": "func",
   "name": "receive",
   "params": [
    {
     "name": "val",
     "type": "string"
    },
    {
     "name": "doSet",
     "type": "bool"
    }
   ],
   "result": {
    "name": "result",
    "type": "string"
   },
   "slotStyle": "leftNone;rightOut;triggerHidden"
  },
  {
   "elems": [
    {
     "elems": [
      {
       "body": "if self.network == nil then\n\treturn\nend\nself.network:send(\"OTPM 0 0 0\\r\")\n",
       "kind": "func",
       "name": "off",
       "slotStyle": "leftIn;rightNone"
      },
      {
       "attKind": "standard",
       "body": "if self.network == nil then\n\treturn\nend\nlocal scroll = 0\nif(Scroll == true)\nthen\n\tscroll = 1\nelse\n\tscroll = 0\nend\nself.network:send(\"OTPM 1 0 \" .. scroll ..\"\\r\")\n",
       "kind": "func",
       "name": "H_Ramp",
       "params": [
        {
         "name": "Scroll",
         "type": "bool"
        }
       ],
       "slotStyle": "leftIn;rightNone;triggerHidden"
      },
      {
       "attKind": "standard",
       "body": "if self.network == nil then\n\treturn\nend\nlocal scroll = 0\nif(Scroll == true)\nthen\n\tscroll = 1\nelse\n\tscroll = 0\nend\nself.network:send(\"OTPM 2 0 \" .. scroll ..\"\\r\")\n",
       "kind": "func",
       "name": "V_Ramp",
       "params": [
        {
         "name": "Scroll",
         "type": "bool"
        }
       ],
       "slotStyle": "leftIn;rightNone;triggerHidden"
      },
      {
       "attKind": "standard",
       "body": "if self.network == nil then\n\treturn\nend\nlocal scroll = 0\nif(Scroll == true)\nthen\n\tscroll = 1\nelse\n\tscroll = 0\nend\nself.network:send(\"OTPM 3 0 \" .. scroll ..\"\\r\")\n",
       "kind": "func",
       "name": "Bars_100",
       "params": [
        {
         "name": "Scroll",
         "type": "bool"
        }
       ],
       "slotStyle": "leftIn;rightNone;triggerHidden"
      },
      {
       "attKind": "standard",
       "body": "if self.network == nil then\n\treturn\nend\nlocal scroll = 0\nif(Scroll == true)\nthen\n\tscroll = 1\nelse\n\tscroll = 0\nend\nself.network:send(\"OTPM 4 0 \" .. scroll ..\"\\r\")\n",
       "kind": "func",
       "name": "Bars_75",
       "params": [
        {
         "name": "Scroll",
         "type": "bool"
        }
       ],
       "slotStyle": "leftIn;rightNone;triggerHidden"
      },
      {
       "attKind": "standard",
       "body": "if self.network == nil then\n\treturn\nend\nlocal scroll = 0\nif(Scroll == true)\nthen\n\tscroll = 1\nelse\n\tscroll = 0\nend\nself.network:send(\"OTPM 5 0 \" .. scroll ..\"\\r\")\n",
       "kind": "func",
       "name": "Grid_16x16",
       "params": [
        {
         "name": "Scroll",
         "type": "bool"
        }
       ],
       "slotStyle": "leftIn;rightNone;triggerHidden"
      },
      {
       "attKind": "standard",
       "body": "if self.network == nil then\n\treturn\nend\nlocal scroll = 0\nif(Scroll == true)\nthen\n\tscroll = 1\nelse\n\tscroll = 0\nend\nself.network:send(\"OTPM 6 0 \" .. scroll ..\"\\r\")\n",
       "kind": "func",
       "name": "Grid_32x32",
       "params": [
        {
         "name": "Scroll",
         "type": "bool"
        }
       ],
       "slotStyle": "leftIn;rightNone;triggerHidden"
      },
      {
       "attKind": "standard",
       "attReports": {
        "0": ""
       },
       "body": "if self.network == nil then\n\treturn\nend\nlocal scroll = 0\nif(Scroll == true)\nthen\n\tscroll = 1\nelse\n\tscroll = 0\nend\nself.network:send(\"OTPM 7 0 \" .. scroll ..\"\\r\")\n",
       "kind": "func",
       "name": "Burst",
       "params": [
        {
         "name": "Scroll",
         "type": "bool"
        }
       ],
       "slotStyle": "leftIn;rightNone;triggerHidden"
      },
      {
       "attKind": "standard",
       "body": "if self.driver == nil then\n\treturn\nend\nlocal scroll = 0\nif(Scroll == true)\nthen\n\tscroll = 1\nelse\n\tscroll = 0\nend\nself.driver:send(\"OTPM 8 0 \" .. scroll ..\"\\r\")\n",
       "kind": "func",
       "name": "Grey_50",
       "params": [
        {
         "name": "Scroll",
         "type": "bool"
        }
       ],
       "slotStyle": "leftIn;rightNone;triggerHidden"
      },
      {
       "attKind": "standard",
       "body": "if self.network == nil then\n\treturn\nend\nlocal scroll = 0\nif(Scroll == true)\nthen\n\tscroll = 1\nelse\n\tscroll = 0\nend\nself.network:send(\"OTPM 9 0 \" .. scroll ..\"\\r\")\n",
       "kind": "func",
       "name": "Grey_Step_1",
       "params": [
        {
         "name": "Scroll",
         "type": "bool"
        }
       ],
       "slotStyle": "leftIn;rightNone;triggerHidden"
      },
      {
       "attKind": "standard",
       "body": "if self.network == nil then\n\treturn\nend\nlocal scroll = 0\nif(Scroll == true)\nthen\n\tscroll = 1\nelse\n\tscroll = 0\nend\nself.network:send(\"OTPM 10 0 \" .. scroll ..\"\\r\")\n",
       "kind": "func",
       "name": "Grey_Step_2",
       "params": [
        {
         "name": "Scroll",
         "type": "bool"
        }
       ],
       "slotStyle": "leftIn;rightNone;triggerHidden"
      }
     ],
     "kind": "ns",
     "name": "Testpattern"
    },
    {
     "elems": [
      {
       "body": "if self.network == nil then\r\n\treturn\r\nend\r\nself.network:send(\"RTE 1\\r\")\r\n",
       "kind": "func",
       "name": "DVI"
      },
      {
       "body": "if self.network == nil then\r\n\treturn\r\nend\r\nself.network:send(\"RTE 2\\r\")\r\n",
       "kind": "func",
       "name": "VGA"
      },
      {
       "body": "if self.network == nil then\r\n\treturn\r\nend\r\nself.network:send(\"RTE 3\\r\")\r\n",
       "kind": "func",
       "name": "Component"
      },
      {
       "body": "if self.network == nil then\r\n\treturn\r\nend\r\nself.network:send(\"RTE 4\\r\")\r\n",
       "kind": "func",
       "name": "SDI"
      },
      {
       "body": "if self.network == nil then\r\n\treturn\r\nend\r\nself.network:send(\"RTE 5\\r\")\r\n",
       "kind": "func",
       "name": "Black_Logo"
      }
     ],
     "kind": "ns",
     "name": "Input"
    },
    {
     "body": "if self.network == nil then\r\n\treturn\r\nend\r\nself.network:send(\"FREEZ 1\\r\")\r\n",
     "kind": "func",
     "name": "Freeze_On",
     "slotStyle": "leftIn;rightNone"
    },
    {
     "body": "if self.network == nil then\r\n\treturn\r\nend\r\nself.network:send(\"FREEZ 0\\r\")\r\n",
     "kind": "func",
     "name": "Freeze_Off",
     "slotStyle": "leftIn;rightNone"
    }
   ],
   "kind": "ns",
   "name": "Imagepro_I"
  },
  {
   "elems": [
    {
     "elems": [
      {
       "body": "if self.network == nil then\r\n\treturn\r\nend\r\nself.network:send(\"OTPM 0 0 0\\r\")\r\n",
       "kind": "func",
       "name": "off",
       "slotStyle": "leftIn;rightNone"
      },
      {
       "attKind": "standard",
       "body": "if self.network == nil then\n\treturn\nend\nlocal scroll = 0\nif(Scroll == true)\nthen\n\tscroll = 1\nelse\n\tscroll = 0\nend\nself.network:send(\"OTPM 1 0 \" .. scroll ..\"\\r\")\n",
       "kind": "func",
       "name": "H_Ramp",
       "params": [
        {
         "name": "Scroll",
         "type": "bool"
        }
       ],
       "slotStyle": "leftIn;rightNone;triggerHidden"
      },
      {
       "attKind": "standard",
       "body": "if self.network == nil then\n\treturn\nend\nlocal scroll = 0\nif(Scroll == true)\nthen\n\tscroll = 1\nelse\n\tscroll = 0\nend\nself.network:send(\"OTPM 2 0 \" .. scroll ..\"\\r\")\n",
       "kind": "func",
       "name": "V_Ramp",
       "params": [
        {
         "name": "Scroll",
         "type": "bool"
        }
       ],
       "slotStyle": "leftIn;rightNone;triggerHidden"
      },
      {
       "attKind": "standard",
       "body": "if self.network == nil then\n\treturn\nend\nlocal scroll = 0\nif(Scroll == true)\nthen\n\tscroll = 1\nelse\n\tscroll = 0\nend\nself.network:send(\"OTPM 3 0 \" .. scroll ..\"\\r\")\n",
       "kind": "func",
       "name": "Bars_100",
       "params": [
        {
         "name": "Scroll",
         "type": "bool"
        }
       ],
       "slotStyle": "leftIn;rightNone;triggerHidden"
      },
      {
       "attKind": "standard",
       "body": "if self.network == nil then\n\treturn\nend\nlocal scroll = 0\nif(Scroll == true)\nthen\n\tscroll = 1\nelse\n\tscroll = 0\nend\nself.network:send(\"OTPM 4 0 \" .. scroll ..\"\\r\")\n",
       "kind": "func",
       "name": "Grid_16x16",
       "params": [
        {
         "name": "Scroll",
         "type": "bool"
        }
       ],
       "slotStyle": "leftIn;rightNone;triggerHidden"
      },
      {
       "attKind": "standard",
       "body": "if self.network == nil then\n\treturn\nend\nlocal scroll = 0\nif(Scroll == true)\nthen\n\tscroll = 1\nelse\n\tscroll = 0\nend\nself.network:send(\"OTPM 5 0 \" .. scroll ..\"\\r\")\n",
       "kind": "func",
       "name": "Grid_32x32",
       "params": [
        {
         "name": "Scroll",
         "type": "bool"
        }
       ],
       "slotStyle": "leftIn;rightNone;triggerHidden"
      },
      {
       "attKind": "standard",
       "body": "if self.network == nil then\n\treturn\nend\nlocal scroll = 0\nif(Scroll == true)\nthen\n\tscroll = 1\nelse\n\tscroll = 0\nend\nself.network:send(\"OTPM 6 0 \" .. scroll ..\"\\r\")\n",
       "kind": "func",
       "name": "Burst",
       "params": [
        {
         "name": "Scroll",
         "type": "bool"
        }
       ],
       "slotStyle": "leftIn;rightNone;triggerHidden"
      },
      {
       "attKind": "standard",
       "body": "if self.network == nil then\n\treturn\nend\nlocal scroll = 0\nif(Scroll == true)\nthen\n\tscroll = 1\nelse\n\tscroll = 0\nend\nself.network:send(\"OTPM 7 0 \" .. scroll ..\"\\r\")\n",
       "kind": "func",
       "name": "Bars_75",
       "params": [
        {
         "name": "Scroll",
         "type": "bool"
        }
       ],
       "slotStyle": "leftIn;rightNone;triggerHidden"
      },
      {
       "attKind": "standard",
       "body": "if self.network == nil then\n\treturn\nend\nlocal scroll = 0\nif(Scroll == true)\nthen\n\tscroll = 1\nelse\n\tscroll = 0\nend\nself.network:send(\"OTPM 8 0 \" .. scroll ..\"\\r\")\n",
       "kind": "func",
       "name": "Grey_50",
       "params": [
        {
         "name": "Scroll",
         "type": "bool"
        }
       ],
       "slotStyle": "leftIn;rightNone;triggerHidden"
      },
      {
       "attKind": "standard",
       "body": "if self.network == nil then\n\treturn\nend\nlocal scroll = 0\nif(Scroll == true)\nthen\n\tscroll = 1\nelse\n\tscroll = 0\nend\nself.network:send(\"OTPM 9 0 \" .. scroll ..\"\\r\")\n",
       "kind": "func",
       "name": "Grey_Step_1",
       "params": [
        {
         "name": "Scroll",
         "type": "bool"
        }
       ],
       "slotStyle": "leftIn;rightNone;triggerHidden"
      },
      {
       "attKind": "standard",
       "body": "if self.network == nil then\n\treturn\nend\nlocal scroll = 0\nif(Scroll == true)\nthen\n\tscroll = 1\nelse\n\tscroll = 0\nend\nself.network:send(\"OTPM 10 0 \" .. scroll ..\"\\r\")\n",
       "kind": "func",
       "name": "Grey_Step_2",
       "params": [
        {
         "name": "Scroll",
         "type": "bool"
        }
       ],
       "slotStyle": "leftIn;rightNone;triggerHidden"
      },
      {
       "attKind": "standard",
       "body": "if self.network == nil then\n\treturn\nend\nlocal scroll = 0\nif(Scroll == true)\nthen\n\tscroll = 1\nelse\n\tscroll = 0\nend\nself.network:send(\"OTPM 11 0 \" .. scroll ..\"\\r\")\n",
       "kind": "func",
       "name": "White",
       "params": [
        {
         "name": "Scroll",
         "type": "bool"
        }
       ],
       "slotStyle": "leftIn;rightNone;triggerHidden"
      },
      {
       "attKind": "standard",
       "body": "if self.network == nil then\n\treturn\nend\nlocal scroll = 0\nif(Scroll == true)\nthen\n\tscroll = 1\nelse\n\tscroll = 0\nend\nself.network:send(\"OTPM 12 0 \" .. scroll ..\"\\r\")\n",
       "kind": "func",
       "name": "Black",
       "params": [
        {
         "name": "Scroll",
         "type": "bool"
        }
       ],
       "slotStyle": "leftIn;rightNone;triggerHidden"
      },
      {
       "attKind": "standard",
       "body": "if self.network == nil then\n\treturn\nend\nlocal scroll = 0\nif(Scroll == true)\nthen\n\tscroll = 1\nelse\n\tscroll = 0\nend\nself.network:send(\"OTPM 13 0 \" .. scroll ..\"\\r\")\n",
       "kind": "func",
       "name": "SMTP",
       "params": [
        {
         "name": "Scroll",
         "type": "bool"
        }
       ],
       "slotStyle": "leftIn;rightNone;triggerHidden"
      }
     ],
     "kind": "ns",
     "name": "Testpattern"
    },
    {
     "elems": [
      {
       "body": "if self.network == nil then\r\n\treturn\r\nend\r\nself.network:send(\"RTE 1\\r\")\r\n",
       "kind": "func",
       "name": "DVI",
       "slotStyle": "leftIn;rightNone"
      },
      {
       "body": "if self.network == nil then\r\n\treturn\r\nend\r\nself.network:send(\"RTE 2\\r\")\r\n",
       "kind": "func",
       "name": "Analog",
       "slotStyle": "leftIn;rightNone"
      },
      {
       "body": "if self.network == nil then\r\n\treturn\r\nend\r\nself.network:send(\"RTE 3\\r\")\r\n",
       "kind": "func",
       "name": "HDMI",
       "slotStyle": "leftIn;rightNone"
      },
      {
       "body": "if self.network == nil then\r\n\treturn\r\nend\r\nself.network:send(\"RTE 4\\r\")\r\n",
       "kind": "func",
       "name": "Displayport",
       "slotStyle": "leftIn;rightNone"
      },
      {
       "body": "if self.network == nil then\r\n\treturn\r\nend\r\nself.network:send(\"RTE 5\\r\")\r\n",
       "kind": "func",
       "name": "SDI_1",
       "slotStyle": "leftIn;rightNone"
      },
      {
       "body": "if self.network == nil then\r\n\treturn\r\nend\r\nself.network:send(\"RTE 6\\r\")\r\n",
       "kind": "func",
       "name": "SDI_2",
       "slotStyle": "leftIn;rightNone"
      },
      {
       "body": "if self.network == nil then\r\n\treturn\r\nend\r\nself.network:send(\"RTE 7\\r\")\r\n",
       "kind": "func",
       "name": "Logo",
       "slotStyle": "leftIn;rightNone"
      },
      {
       "body": "if self.network == nil then\r\n\treturn\r\nend\r\nself.network:send(\"RTE 8\\r\")\r\n",
       "kind": "func",
       "name": "Black",
       "slotStyle": "leftIn;rightNone"
      }
     ],
     "kind": "ns",
     "name": "Input"
    },
    {
     "body": "if self.network == nil then\r\n\treturn\r\nend\r\nself.network:send(\"FREEZ 1\\r\")\r\n",
     "kind": "func",
     "name": "Freeze_On",
     "slotStyle": "leftIn;rightNone"
    },
    {
     "body": "if self.network == nil then\r\n\treturn\r\nend\r\nself.network:send(\"FREEZ 0\\r\")\r\n",
     "kind": "func",
     "name": "Freeze_Off",
     "slotStyle": "leftIn;rightNone"
    }
   ],
   "kind": "ns",
   "name": "Imagepro_II"
  }
 ],
 "cjv": {
  "h": 176.25,
  "w": 395.0,
  "x": 50.185185185185176,
  "y": 99.30555555555554
 },
 "definedExternally": false,
 "hostInfo": {
  "systemType": ""
 },
 "libraryExportPath": "C:/PixeraCode/nui/data/control_library_standard/Drivers/Barco/Imagepro.json",
 "license": "1GNTlyr7sewU1l3S6nhV4jtMISqEFiJFdgs68t/kRy/6tkWpY3wCkNSI38/reVLaTW7zMzElBH9gI4JwAXR4YIRznbjsJRBkeEOuMeYyaiPZ33ycL/hG2Zz8/F4cxeaO2oAfLI+ClgNqIkhAJQ15xQ==",
 "name": "Imagepro",
 "properties": [
  {
   "cont": "192.168.0.254",
   "name": "IP",
   "typeHint": "string"
  },
  {
   "cont": "10001",
   "name": "Port",
   "typeHint": "string"
  },
  {
   "cont": "false",
   "name": "Auto Init",
   "readOnly": true,
   "typeHint": "bool"
  },
  {
   "cont": "Benni M.",
   "name": "Creator Name",
   "readOnly": true,
   "typeHint": "string"
  },
  {
   "cont": "",
   "imageBase64": "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",
   "name": "Logo",
   "readOnly": true,
   "showName": false,
   "typeHint": "image"
  },
  {
   "cont": "www.benni-m.de",
   "name": "Creator URL",
   "readOnly": true,
   "typeHint": "url"
  },
  {
   "cont": "1.1",
   "name": "Version",
   "readOnly": true,
   "typeHint": "string"
  }
 ],
 "separateCode": false,
 "uiUrl": "/static/ui_builder/ui_builder.html"
}